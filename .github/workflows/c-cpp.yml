name: Build and Release OpenFrameworks Project

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Install libunwind
      - name: Install libunwind
        run: sudo apt-get install libunwind-dev

      # Cache OpenFrameworks build
      - name: Cache OpenFrameworks build
        uses: actions/cache@v3
        with:
          path: |
            of_v0.12.0_linux64gcc6_release/libs
            of_v0.12.0_linux64gcc6_release/addons
          key: ${{ runner.os }}-of-v0.12.0-libs-${{ hashFiles('of_v0.12.0_linux64gcc6_release/scripts/linux/ubuntu/install_dependencies.sh') }}
          restore-keys: |
            ${{ runner.os }}-of-

      # Download OpenFrameworks
      - name: Download OpenFrameworks
        run: wget https://github.com/openframeworks/openFrameworks/releases/download/0.12.0/of_v0.12.0_linux64gcc6_release.tar.gz

      # Extract OpenFrameworks
      - name: Extract OpenFrameworks
        run: tar -xvzf of_v0.12.0_linux64gcc6_release.tar.gz

      # Install dependencies
      - name: Install dependencies
        run: |
          cd of_v0.12.0_linux64gcc6_release/scripts/linux/ubuntu
          sudo ./install_dependencies.sh

      # Compile OpenFrameworks
      - name: Compile OpenFrameworks
        run: |
          cd of_v0.12.0_linux64gcc6_release/scripts/linux
          ./compileOF.sh -j$(nproc)

      # Clone required addons
      - name: Clone ofxImGui (develop branch)
        run: |
          cd of_v0.12.0_linux64gcc6_release/addons
          git clone --branch develop https://github.com/jvcleave/ofxImGui

      - name: Clone ofxTextureRecorder
        run: |
          cd of_v0.12.0_linux64gcc6_release/addons
          git clone https://github.com/arturoc/ofxTextureRecorder

      # Checkout the fireflies_port repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: of_v0.12.0_linux64gcc6_release/apps/myApps/fireflies_port

      - name: Build the project
        run: |
          cd of_v0.12.0_linux64gcc6_release/apps/myApps/fireflies_port
          make -j$(nproc)


      # Upload binary as release
      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          draft: false
          prerelease: false

      - name: Upload binary as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: of_v0.12.0_linux64gcc6_release/apps/myApps/fireflies_port/bin/fireflies_port
          asset_name: fireflies_port
          asset_content_type: application/octet-stream
